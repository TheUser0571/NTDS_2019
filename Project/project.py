# -*- coding: utf-8 -*-
"""Project

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qbZiYrCLKehyY9H0psRQ9QeDNCl-0_ur
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

# Code to read csv file into Colaboratory:
!pip install -U -q PyDrive
from pydrive.auth import GoogleAuth
from pydrive.drive import GoogleDrive
from google.colab import auth
from oauth2client.client import GoogleCredentials
# Authenticate and create the PyDrive client.
auth.authenticate_user()
gauth = GoogleAuth()
gauth.credentials = GoogleCredentials.get_application_default()
drive = GoogleDrive(gauth)

link_edges='https://drive.google.com/open?id=1KJ1IP_hYSapUV6Cdk_yi5Wrv8SmH6gS5'
link_nodes='https://drive.google.com/open?id=1fhUbpX-f7mYXgLI6UTf1Vg8tdRpDgnOf'
link_generator='https://drive.google.com/open?id=1h1ZOlKGEYO5wz3yY-V5jWV90RyuBLMDX'
link_load_signal='https://drive.google.com/open?id=129Q0RG8CbDU2l31z7hxHBI2FvFrKyKcq'
_, id_edges = link_edges.split('=')
_, id_nodes = link_nodes.split('=')
_, id_generator = link_generator.split('=')
_, id_load = link_load_signal.split('=')
downloaded_edges = drive.CreateFile({'id':id_edges}) 
downloaded_nodes = drive.CreateFile({'id':id_nodes}) 
downloaded_generator = drive.CreateFile({'id':id_generator}) 
downloaded_load_signal = drive.CreateFile({'id':id_load})
downloaded_edges.GetContentFile('edges.csv')
downloaded_nodes.GetContentFile('nodes.csv')
downloaded_generator.GetContentFile('generator.csv')
downloaded_load_signal.GetContentFile('load.csv')
edges = pd.read_csv('edges.csv')
nodes = pd.read_csv('nodes.csv')
generator = pd.read_csv('generator.csv')
load_signal = pd.read_csv('load.csv')

generator.columns

edges.columns

nodes.columns

load_signal.columns

load_signal['1']

import networkx as nx
G=nx.Graph()

# to import nodes to G one needs a list of IDs and to import edges one need a list of tupples
node_list=nodes['ID'].tolist()
edge_list_start=edges['fromNode'].tolist()
edge_list_end=edges['toNode'].tolist()
edge_list=list(zip(edge_list_start,edge_list_end))

G.add_nodes_from(node_list)
G.add_edges_from(edge_list)

nx.draw(G)
plt.show()

#number of connected components
nx.number_connected_components(G)